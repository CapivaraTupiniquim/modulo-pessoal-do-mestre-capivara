{"name":"Token Vision and Light","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/sunken-eye.svg","scope":"global","command":"// A macro for the Foundry virtual tabletop that lets a user configure their token's vision and lighting settings. This script is taken from Sky's foundry repo here: https://github.com/Sky-Captain-13/foundry/blob/master/scriptMacros/tokenVision.js.\n\nlet applyChanges = false;\nnew Dialog({\n  title: `Token Vision and Light Configuration`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Vision Type:</label>\n        <select id=\"vision-type\" name=\"vision-type\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"dim0\">Self</option>\n          <option value=\"dim30\">Darkvision (30 ft)</option>\n          <option value=\"dim60\">Darkvision (60 ft)</option>\n          <option value=\"dim90\">Darkvision (90 ft)</option>\n          <option value=\"dim120\">Darkvision (120 ft)</option>\n          <option value=\"dim150\">Darkvision (150 ft)</option>\n          <option value=\"dim180\">Darkvision (180 ft)</option>\n          <option value=\"bright120\">Devil's Sight (Warlock)</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Light Source:</label>\n        <select id=\"light-source\" name=\"light-source\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"none\">None</option>\n          <option value=\"candle\">Candle</option>\n          <option value=\"lamp\">Lamp</option>\n          <option value=\"bullseye\">Lantern (Bullseye)</option>\n          <option value=\"hooded-dim\">Lantern (Hooded - Dim)</option>\n          <option value=\"hooded-bright\">Lantern (Hooded - Bright)</option>\n          <option value=\"light\">Light (Cantrip)</option>\n          <option value=\"torch\">Torch</option>\n          <option value=\"moon-touched\">Moon-Touched</option>\n        </select>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Apply Changes`,\n      callback: () => applyChanges = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel Changes`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (applyChanges) {\n      for ( let token of canvas.tokens.controlled ) {\n        let visionType = html.find('[name=\"vision-type\"]')[0].value || \"none\";\n        let lightSource = html.find('[name=\"light-source\"]')[0].value || \"none\";\n        let dimSight = 0;\n        let brightSight = 0;\n        let dimLight = 0;\n        let brightLight = 0;\n        let lightAngle = 360;\n        let lockRotation = token.data.lockRotation;\n        let lightAnimation = token.data.lightAnimation;\n        let lightAlpha = token.data.lightAlpha;\n        let lightColor = token.data.lightColor;\n        const colorFire = \"#f8c377\";\n        const colorWhite = \"#ffffff\";\n        const colorMoonGlow = \"#f4f1c9\";\n        // Get Vision Type Values\n        switch (visionType) {\n          case \"dim0\":\n            dimSight = 0;\n            brightSight = 0;\n            break;\n          case \"dim30\":\n            dimSight = 30;\n            brightSight = 0;\n            break;\n          case \"dim60\":\n            dimSight = 60;\n            brightSight = 0;\n            break;\n          case \"dim90\":\n            dimSight = 90;\n            brightSight = 0;\n            break;\n          case \"dim120\":\n            dimSight = 120;\n            brightSight = 0;\n            break;\n          case \"dim150\":\n            dimSight = 150;\n            brightSight = 0;\n            break;\n          case \"dim180\":\n            dimSight = 180;\n            brightSight = 0;\n            break;\n          case \"bright120\":\n            dimSight = 0;\n            brightSight= 120;\n            break;\n          case \"nochange\":\n          default:\n            dimSight = token.data.dimSight;\n            brightSight = token.data.brightSight;\n        }\n        // Get Light Source Values\n        switch (lightSource) {\n          case \"none\":\n            dimLight = 0;\n            brightLight = 0;\n            lightAnimation = {type: \"none\"};\n            break;\n          case \"candle\":\n            dimLight = 10;\n            brightLight = 5;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"lamp\":\n            dimLight = 45;\n            brightLight = 15;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"bullseye\":\n            dimLight = 120;\n            brightLight = 60;\n            lockRotation = false;\n            lightAngle = 52.5;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"hooded-dim\":\n            dimLight = 5;\n            brightLight = 0;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"hooded-bright\":\n            dimLight = 60;\n            brightLight = 30;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"light\":\n            dimLight = 40;\n            brightLight = 20;\n            lightAnimation = {type: \"none\"};\n            lightColor = colorWhite;\n            lightAlpha = 0.15;\n            break;\n          case \"torch\":\n            dimLight = 40;\n            brightLight = 20;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"moon-touched\":\n            dimLight = 30;\n            brightLight = 15;\n            lightAnimation = {type: \"none\"};\n            lightColor = colorMoonGlow;\n            break;\n          case \"nochange\":\n          default:\n            dimLight = token.data.dimLight;\n            brightLight = token.data.brightLight;\n            lightAngle = token.data.lightAngle;\n            lockRotation = token.data.lockRotation;\n            lightAnimation = token.data.lightAnimation;\n            lightAlpha = token.data.lightAlpha;\n            lightColor = token.data.lightColor;\n        }\n        // Update Token\n        console.log(token);\n        token.update({\n          vision: true,\n          dimSight: dimSight,\n          brightSight: brightSight,\n          dimLight: dimLight,\n          brightLight:  brightLight,\n          lightAngle: lightAngle,\n          lockRotation: lockRotation,\n          lightAnimation: lightAnimation,\n          lightAlpha: lightAlpha,\n          lightColor: lightColor\n        });\n      }\n    }\n  }\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"1lyoIMNfxzoJOVyp"}
{"name":"Sneak Attack","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"//\t\tDISCLAIMER:\t\tThis macro is heavily based on the original D&D 5e Rage Macro masterwork written by Felix#6196.\n//\t\t\t\t\t\tNorc#5108 created and is maintaining this macro.\n//\n//\t\t\t\t\t\tUpdates:\t1.\t2020/06/05: Initial version.\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tBonus Tip: Sneak Attack as a Condition                                                                                                                       \n//!!!\tIf you use the Combat Utility Belt module's Condition Lab, try adding a condition called \"Sneaky\" with the same icon \t\t\t   \n//!!!\tas the optional sneak attack icon overlay, 'icons/svg/mystery-man-black.svg' by default.  See EXPERIMENTAL MACRO ICON/NAME TOGGLE below.\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!   OPTIONAL TOKEN ICON-\tOn by default. If a path to a sneak attack icon is defined, it displays like a condition on the sneaking rogue.\n//!!!\t\t\t\t\t\t\tTo use a different icon, manually change the filepath below or leave it empty ('') to disable the effect.\n//!!!\nconst sneakIconPath = 'icons/svg/mystery-man-black.svg';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tEXPERIMENTAL MACRO ICON/NAME TOGGLE\t\tIf enabled, the macro icon and name toggles based on whether the rogue is currently sneaking. \n//!!!\t\t\t\t\t\t\t\t\t\t\tCAUTIONS: \t1. \tThis feature is off by default and is intended for ADVANCED USERS ONLY. \n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t2. \tRequires configuration using \"The Furnace\" module for a player to run!\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tThe GM needs to grant The Furnace's \"Run as GM\" permission for this macro.\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t3. \tWorks best with only one rogue using this feature at a time.\n\n\t\t\t\t//To auto-toggle the macro's icon/name, override toggleMacro to true below.\n\t\t\t\tconst toggleMacro = false;\n\n\t\t\t\t//To use a different icon, manually change the filepath here\n\t\t\t\tconst stopSneakIconPath = 'icons/svg/cowled.svg';\n\n\t\t\t\t//You must update the following constant to this macro's exact name for the macro icon toggling to work.\n\t\t\t\tconst sneakMacroName = 'Sneak Attack';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nlet toggleResult = false;\nlet enabled = false;\nlet errorReason = '';\nlet sneakAttack = {};\nlet rogue = {};\nlet rogueLvls = 0;\nlet sneakDice = 0;\nlet chatMsg = '';\nlet oldMDmg = '';\nlet oldRDmg = '';\n\nlet macroActor = actor;\nlet macroToken = token;\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tBASIC LOCALIZATION SUPPORT\t\t\t\tSets names of D&D5E features as constants instead of hardcoding to allow easier translation.\n//!!!\t\t\t\t\t\t\t\t\t\t\tSets error messages as constants also for easier translation.\n\n\t\t\t\tconst rogueClassName = 'Rogue';\n\t\t\t\tconst sneakAttackFeatureName = 'Sneak Attack';\n\n\t\t\t\tconst errorSelectRogue = 'Please select a single rogue token.';\n\t\t\t\tconst warnMacroNotFound = ' is not a valid macro name, please fix. Sneak attack toggle successful but unable to alter macro.';\n\t\t\t\tconst errorSelectToken = 'Please select a token.';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n//check to ensure token is selected and attempt to define the sneak attack feature\nif (macroActor !== null && macroActor !== undefined) {\n\tsneakAttack = macroActor.items.find(i => i.name == `${sneakAttackFeatureName}`);\n} else {\nerrorReason = `${errorSelectToken}`;\n}\n\n//check to ensure token is a rogue\nif (errorReason == '' && macroActor.items.find(i => i.name == `${rogueClassName}`) !== null) {\n\trogue = macroActor.items.find(i => i.name == `${rogueClassName}`);\n} else {\n\terrorReason = `${errorSelectRogue}`;\n}\n\nconsole.log(`Error reason is: ${errorReason}`);\n//main execution now that errors are caught\n\nif (errorReason == '') {\n\t\n\tchatMsg = '';\n\tlet enabled = false;\n\t// store the state of the sneak attack toggle in flags\n\tif (macroActor.data.flags.sneakMacro !== null && macroActor.data.flags.sneakMacro !== undefined) {\n\t\tenabled = true;\n\t}\n\t\n\t// if sneak attack is active, disable it\n\tif (enabled) {\n\t\tchatMsg = `${macroActor.name} is no longer sneak attacking.`;\n\t\t// ranged and melee weapon attack bonus\n\t\tlet obj = {};\n\t\tobj['flags.sneakMacro'] = null;\t\t\n\t\tobj['data.bonuses.mwak.damage'] = macroActor.data.flags.sneakMacro.oldMDmg;\t\t\t\n\t\tobj['data.bonuses.rwak.damage'] = macroActor.data.flags.sneakMacro.oldRDmg;\t\n\t\tmacroActor.update(obj);\n\t\t\n\t// if sneak attack is disabled, enable it\n\t} else {\t\t\n\t\tchatMsg = `${macroActor.name} starts sneak attacking!`;\n\t\t\n\t\tlet obj = {};\n\t\tobj['flags.sneakMacro.enabled'] = true;\n\n\t\t// Preserve old mwak damage bonus if there was one\n\t\tlet oldMDmg = macroActor.data.data.bonuses.mwak.damage;\n\t\tif (oldMDmg==null || oldMDmg == undefined || oldMDmg == '') oldMDmg = 0;\n\t\tobj['flags.sneakMacro.oldMDmg'] = JSON.parse(JSON.stringify(oldMDmg));\n\n\t\t// Preserve old rwak damage bonus if there was one\n\t\tlet oldRDmg = macroActor.data.data.bonuses.rwak.damage;\n\t\tif (oldRDmg==null || oldRDmg == undefined || oldRDmg == '') oldRDmg = 0;\n\t\tobj['flags.sneakMacro.oldRDmg'] = JSON.parse(JSON.stringify(oldRDmg));\n\n\t\t\n\t\t// Determining the rogue level\n\t\trogueLvls = rogue.data.data.levels;\n\n\t\t// Formula to determine the sneak attack damage depending on rogue level\t\n\t\tsneakDice = Math.ceil(rogueLvls/2);\n\t\n\t\t//actually add the bonus sneak attack damage to the previous bonus damage\n\t\t//respect roll formulas if present.\n\t\tif (oldMDmg==null || oldMDmg == undefined || oldMDmg == '' || oldMDmg == 0) {\n\t\t\tobj['data.bonuses.mwak.damage'] = `${sneakDice}d6`;\n\t\t} else {\n\t\t\tobj['data.bonuses.mwak.damage'] = `${oldMDmg} + ${sneakDice}d6`;\n\t\t}\n\n\t\tif (oldRDmg==null || oldRDmg == undefined || oldRDmg == '' || oldRDmg == 0) {\n\t\t\tobj['data.bonuses.rwak.damage'] = `${sneakDice}d6`;\n\t\t} else {\n\t\t\tobj['data.bonuses.rwak.damage'] = `${oldRDmg} + ${sneakDice}d6`;\n\t\t}\t\n\n\t\tmacroActor.update(obj);\n\n\t}\t\n\t\n\t//mark or unmark character's token with Sneaky effect icon, if sneakIconPath is defined\n\t(async () => { \n\t\ttoggleResult = await macroToken.toggleEffect(sneakIconPath);\n\t\tif (toggleResult == enabled) macroToken.toggleEffect(sneakIconPath);  \n\t})();\n\n\t//toggle macro icon and name, if enabled\n\tif (toggleMacro) {\n//\t\tNorc's preferred icons, not sure if publicly available\n//\t\tsneakyMacroImgPath = 'systems/dnd5e/icons/skills/shadow_17.jpg';\n//\t\tstopSneakIconPath = 'systems/dnd5e/icons/skills/yellow_11.jpg';\n\t\tlet sneakMacro = game.macros.getName(sneakMacroName);\n\t\t\t//Also check for name of macro in its \"off\" form\n\t\t\tif (sneakMacro == null || sneakMacro == undefined) {\n\t\t\t\tsneakMacro = game.macros.getName('Stop ' + sneakMacroName);\n\t\t\t}\n\t\tlet obj = {};\n\t\tif ( (sneakMacro !== null && sneakMacro !== undefined) && \n\t\t\t\t+ (stopSneakIconPath !== null && stopSneakIconPath !== undefined && stopSneakIconPath !== '') ) {\n\t\t\tif (enabled) {\n\t\t\tobj['img'] = sneakIconPath;\n\t\t\tobj['name'] = sneakMacroName;\n\t\t\t} else {\n\t\t\tobj['img'] = stopSneakIconPath;\n\t\t\tobj['name'] = 'Stop ' + sneakMacroName;\n\t\t\t}\n\t\t\tsneakMacro.update(obj);\n\t\t} else {\n\t\tui.notifications.warn(`${sneakMacroName} ${warnMacroNotFound}`);\t\t\t\n\t\t}\n\t}\n\n} else {\nui.notifications.error(`${errorReason}`);\t\n}\nif (chatMsg !== '') {\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\tspeaker: ChatMessage.getSpeaker(),\n\t\tcontent: chatMsg\n\t};\n\tChatMessage.create(chatData, {});\n}","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"core":{"sourceId":"Compendium.foundry_community_macros.community-macros-5e.KWCb3y9I2P45LDWU"},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"3mJBgNAbkrOhxNJs"}
{"name":"Localize 5eTools Images","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/5etools-logo.png","scope":"global","command":"for (const a of game.actors) {\n  const tokenImg = a.data.token.img.replaceAll(\"https://5e.tools\", \"modules/plutonium\");\n  if (tokenImg != a.data.token.img)\n    await a.update({\"token.img\": tokenImg});\n  const actorImg = a.data.img.replaceAll(\"https://5e.tools\", \"modules/plutonium\");\n  if (actorImg != a.data.img)\n    await a.update({\"img\": actorImg});\n}\n\nfor (const t of canvas.tokens.placeables) {\n  const img = t.data.img.replaceAll(\"https://5e.tools\", \"modules/plutonium\");\n  if (img != t.data.img)\n    await t.document.update({\"img\": img});\n}","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"test","system":"dnd5e","coreVersion":"0.8.8","systemVersion":"1.4.2"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"7kXg2aIIA7TwwWIf"}
{"name":"Próximo Turno","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/star-swirl.svg","scope":"global","command":"/*\nAuthor: willisrocks\nDescription: \n\nEnds the current actors turn in a combat encounter. Useful when you don't pop out your combat tracker\nand want to end the turn from your hotbar.\n\nIf the user is a gamemaster, it will always end the current turn. For players, it will only end \nthe turn when the current actor in the turn order is owned by you. \n\nBased on the work of reddit user serrag97: https://www.reddit.com/r/FoundryVTT/comments/j1b8gs/next_turn_shortcut/\n*/\n\n\nmain()\n\nasync function main() {\n    try {\n        // If you have the Gamemaster role, you can advance\n        // the turn for any actor\n        const isGM = game.users.get(game.userId).hasRole(4);\n        if (isGM) {\n            game.combats.active.nextTurn();\n            return;\n        }\n\n        // Otherwise, we check that the user owns the current token\n        // in the turn order\n        const currTokenId = game.combats.active.current.tokenId;\n        const combatant = game.combats.active.data.combatants.find(c => c.tokenId === currTokenId);\n        const player = combatant.players.find(p => p._id === game.userId);\n        if (player) {\n            game.combats.active.nextTurn();\n            return;\n        } else {\n            ui.notifications.info('You can only advance the turn on your turn');\n        }\n    } catch(e) {\n        ui.notifications.error(e);\n        return;\n    }\n}","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"core":{"sourceId":"Macro.EPdQjOlpTWwBKx9e"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"9oVVICq2AXco85Cs"}
{"name":"Mostrar Vídeos","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/video.svg","scope":"global","command":"new MultiMediaPopout(\"maps/animados/mapa-animado2.webm\", { shareable: true })\n\t.render(true)\n\t.shareImage();","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"BiPSYdfuwuGQeMQC"}
{"name":"Trocar Lugares","type":"chat","author":"fH9rQcKnNx31GdB2","img":"icons/player-next.svg","scope":"global","command":"/*\n* Gets a list of selected tokens and swaps their position if there are two selected\n//Icon: Player Next (Moullinet Icons)\n*/\n\nlet targetTokens = canvas.tokens.controlled;\nfunction checkForTokens(){\n    if (targetTokens.length === 2) {\n        return swapTokens(targetTokens);\n    } else {\n        return ui.notifications.error('Você precisa selecionar dois tokens na cena para que invertam a posição.');\n    }\n};\n\nfunction swapTokens(tokens) {\n    tokens[0].update({'x':tokens[1].x, 'y':tokens[1].y});\n    tokens[1].update({'x':tokens[0].x, 'y':tokens[0].y});\n}\n\ncheckForTokens();","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"GojOSYFLGD697BJQ"}
{"name":"Remove Selected token from Boss Bar","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/magic/unholy/strike-body-explode-disintegrate.webp","scope":"global","command":"canvas.scene._bossBars[_token.id].destroy()","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.SGGHqfDRzqwFcRv0"},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"KHkGl677FfhjSsqf"}
{"name":"Mensagem Privada","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/megaphone.svg","scope":"global","command":"const version = 'v0.2';\n/* Whisper \nFeatures\n- whisper to conected players\n\nsource: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/Qualquer/Whisper.js\nicon: icons/tools/scribal/ink-quill-pink.webp\n*/\n\nlet users = User.collection.entities.filter(it => it.active === true);\n\nif (users.length < 2) {\n  ui.notifications.error(\"Nenhum jogador online.\");\n} else {\n  let applyChanges = false;\n  let content =`\n    <form>\n      <div class=\"form-group\">\n        <label>Selecione o jogador:</label>\n        <select id=\"player\" name=\"player\">\n  `;\n\n  for (let user of users) {  \n    content += `<option value=\"`+ user.data.name +`\">`+ user.data.name +\"</option>\";    \n  }\n\n  content += `\n        </select>\n      </div>\n        <div class=\"form-group\">\n        <label>Mensagem:</label>\n        <textarea name=\"msg\" style=\"width:250px;height:150px;\"></textarea><br>\n      </div>\n    </form>\n  `;\n\n  new Dialog(\n    {\n      title: `Mensagem Privada - ${version}`,\n      content: content,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: `Enviar`,\n          callback: () => applyChanges = true\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: `Cancelar`\n        },\n      },\n      default: \"yes\",\n      close: html => {\n        if (applyChanges) {\n          let player = html.find('[name=\"player\"]')[0].value;\n          let msg = html.find('[name=\"msg\"]')[0].value || \"none\";\n          if (msg !== \"none\") {\n            ChatMessage.create({\n              whisper: ChatMessage.getWhisperRecipients(player),\n              content: msg\n            })\n          }\n        }\n      }\n    }\n  ).render(true);\n  \n} // end","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"MDoZgjahOt1mv3Vy"}
{"name":"Tocha","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/torch.svg","scope":"global","command":"let torch = async function() {\n\n   const tokens = canvas.tokens.controlled;\n\n   for (const token of tokens){\n       if (token.data.brightLight != 0) {\n           await token.update({\"dimLight\": 0, \"brightLight\": 0, \"lightColor\": \"\",}); \n       } else {\n         await token.update({\"dimLight\": 40, \"brightLight\": 20, \"lightAlpha\" : 0.2,  \"lightColor\": \"#332d00\", lightAnimation: {speed : 1, intensity : 4, type : \"torch\"}});\n       }\n   }\n};\ntorch();","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"QvVqIpuGB9Y6Nseg"}
{"name":"tamanho+","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"let tokens = canvas.tokens.controlled\n\ntokens.forEach(t => {\n    t.update({\"width\": 2, \"height\": 2});\n\nconst som = 'sons/teste.mp3';\nAudioHelper.play({src: som, volume: 1.0, autoplay: true, loop: false}, true);\n\n});","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"QyB3Pa8Qz2Wn2AHY"}
{"name":"Stealth Check (Furtividade)","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/mute.svg","scope":"global","command":"// Grabs selected tokens and rolls a stealth check against all other tokens passive perception on the map. Then returns the result.\n// Selecionar a pessoa que quer se esconder e a macro mostrará no chat quem a percebeu, com base na percepção passiva de cada um.\n\n// getting all actors of selected tokens\nlet actors = canvas.tokens.controlled.map(({ actor }) => actor);\n\n// if there are no selected tokens, roll for the player's character.\nif (actors.length < 1) {\n  actors = game.users.entities.map(entity => {\n    if (entity.active && entity.character !== null) {\n      return entity.character;\n    }\n  });\n}\nconst validActors = actors.filter(actor => actor != null);\n\nlet messageContent = 'Stealth Skill Check (Furtividade)<br>';\n\n// roll for every actor\nfor (const selectedActor of validActors) {\n  const stealthMod = selectedActor.data.data.skills.ste.total; // stealth roll\n  const stealth = new Roll(`1d20+${stealthMod}`).roll().total; // rolling the formula\n  messageContent += `<hr><h3>${selectedActor.name} rolou um <b>${stealth}</b>.</h3>`; // creating the output string\n\n  // grab a list of unique tokens then check their passive perception against the rolled stealth.\n  const uniqueActor = {};\n  const caughtBy = canvas.tokens.placeables\n    .filter(token => !!token.actor)\n    .filter(({ actor }) => { // filter out duplicate token names. ie: we assume all goblins have the same passive perception\n      if (uniqueActor[actor.name]) {\n        return false;\n      }\n      uniqueActor[actor.name] = true;\n      return true;\n    })\n    .filter(({ actor }) => {\n      return selectedActor.id !== actor.id; // Don't check to see if the token sees himself.\n    })\n    .filter(({ actor }) => actor.data.data.skills.prc.passive >= stealth); // check map tokens passives with roller stealth\n\n  if (!caughtBy.length) {\n    messageContent += 'Passou despercebido!<br>';\n  } else {\n    messageContent += 'Percebeu você:<br>';\n    caughtBy.map(({ actor }) => {\n      messageContent += `<b>${actor.name}</b> rolou ${actor.data.data.skills.prc.passive}.<br>`;\n    });\n  }\n}\n\n// create the message\nconst chatData = {\n  user: game.user._id,\n  speaker: game.user,\n  content: messageContent,\n  whisper: game.users.entities.filter((u) => u.isGM).map((u) => u._id),\n};\nChatMessage.create(chatData, {});","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"UV6BVdDZNly5ww6M"}
{"name":"Randomize Wildcard Tokens","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/circle.svg","scope":"global","command":"// To apply to only controlled tokens, change the first line to:\n// for(let nextToken of canvas.tokens.controlled) {\nasync function randomizeImages() {\nfor(let nextToken of canvas.tokens.placeables) {\n    if (nextToken.actor.data.token.randomImg) {\n        let tokenImgArray = await game.actors.get(nextToken.actor.id).getTokenImages();\n        let imageChoice = Math.floor(Math.random() * tokenImgArray.length);\n        let image = tokenImgArray[imageChoice]\n        nextToken.update({ \"img\": image })\n    }\n}\n}\nrandomizeImages()","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"core":{"sourceId":"Macro.BSlgjKB4i6nMVS9e"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"VjjU3Qzrv6jIjRxJ"}
{"name":"Fechar Portas","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/door.svg","scope":"global","command":"/**\n * Closes all doors on the canvas\n * Author: @Atropos#3814\n */\n \ncanvas.walls.updateMany(canvas.scene.data.walls.map(w => {\n  return {_id: w._id, ds: w.ds === 1 ? 0 : w.ds};\n}));","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"cUYQ7dbzswZtGOEv"}
{"name":"Remove All Effects","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/skull-crossed-bones.svg","scope":"global","command":"// Remove all active effects from the selected token\nlet removeList = token?.actor?.effects.map(e=>e.id)\ntoken?.actor?.deleteEmbeddedEntity(\"ActiveEffect\", removeList)","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.QozX9UXKaJTCc8NY"},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"fClp0THpvVjYaasY"}
{"name":"Prisma Luminoso","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/crystal-growth.svg","scope":"global","command":"let torch = async function() {\n\n   const tokens = canvas.tokens.controlled;\n\n   for (const token of tokens){\n       if (token.data.brightLight != 0) {\n           await token.update({\"dimLight\": 0, \"brightLight\": 0, \"lightColor\": \"\",}); \n       } else {\n         await token.update({\"dimLight\": 60, \"brightLight\": 30, \"lightAlpha\" : 0.2,  \"lightColor\": \"#000000\", lightAnimation: {speed : 2, intensity : 1, type : \"pulse\"}});\n       }\n   }\n};\ntorch();","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"fe3b9jgJaNnot9o9"}
{"name":"Iniciativa Geral - Cena Ativa","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/revolt.svg","scope":"global","command":"/* All tokens to Combat v1.3\n* - This macro select all tokens in the scene\n* - Add all of them to the combat tracker\n* - Roll Initiave for all\n* modified from @atnoslen with a little help from @Atropos (thanks!) \n* source: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/Qualquer/Tokens%20da%20Cena%20no%20Combate.js\n* icon: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/Qualquer/Tokens%20da%20Cena%20no%20Combate.svg\n*/\n\ngetRequirements();\n\nfunction getRequirements() {\n  const scene = game.scenes.entities.filter(scene => scene.active === true)[0];\n  let tokens_list = [];\n  scene.data.tokens.forEach(function(token) {\n    tokens_list += `<li>${token.name}</li>`;\n  });\n    \n  let template = `\n  <h2>Tokens</h2>\n  <ul>\n    ${tokens_list}\n  </ul>    \n  <h2>Opções</h2>\n  <table style=\"width:100%\">\n  <tr>\n    <td><input type=\"radio\" id=\"rollall\" name=\"rolltype\" value=\"rollall\"><label for=\"rollall\">Rolar para Todos</label></td>\n    <td><input type=\"radio\" id=\"rollnpc\" name=\"rolltype\" value=\"rollnpc\" checked=\"checked><label for=\"rollnpc\">Rolar apenas para NPC</label></td>    \n  </tr>\n  </table>  \n  <p>\n  <input type=\"checkbox\" id=\"startcombat\" checked/>Iniciar Combate?\n  </p>\n  `;\n  new Dialog({\n    title: \"Todo Mundo para o Combate\",\n    content: template,\n    buttons: {\n      ok: {\n        label: \"Executar\",\n        callback: async (html) => {\n          rollForIt(html);\n        },\n      }\n    },\n  }).render(true);\n}\n\nfunction rollForIt(html) {\n  const dice=html.find('input[name=\"rolltype\"]:checked').val();\n  let flagstartcombat=html.find(\"#startcombat\")[0].checked;\n  \n  const scene = game.scenes.entities.filter(scene => scene.active === true)[0];\n  let tokens = [];\n\n  let startCRoll=function rollAndStart() {\n    if(dice=='rollall') {\n      game.combat.rollAll();\n    } else {\n      game.combat.rollNPC();\n    }      \n    if (flagstartcombat) {\n      game.combat.startCombat();\n    }\n  }\n\n  if (!game.combat){\n    scene.data.tokens.forEach(function(token) {\n      tokens.push({tokenId:token._id});\n    });\n\n    Combat.create({scene:scene.data._id, combatants:tokens}).then(startCRoll);\n\n  } else {\n    // Combat already exists, add the missing tokens.\n    // This assumes createCombatant is expensive, so create an array\n    // instead of calling individually.\n    scene.data.tokens.forEach(function(token) {\n      if (game.combat.combatants.filter(combatant => combatant.tokenId === token._id).length === 0) {\n        tokens.push({tokenId:token._id});\n      }\n    });\n\n    game.combat.createCombatant(tokens).then(startCRoll);\n  }\n}","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"ivwIlk4cjIymn1QR"}
{"name":"som-pedra","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"const som = 'https://audio.jukehost.co.uk/90qme51JkB1DqqrmQqvmHORq4A9hKB6k.ogg';\nAudioHelper.play({src: som, volume: 1.0, autoplay: true, loop: false}, true);","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"krMIIFZxSXzxgBWW"}
{"name":"tamanho-","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"let tokens = canvas.tokens.controlled\n\ntokens.forEach(t => {\n    t.update({\"width\": 1, \"height\": 1});\n\nconst som = 'sons/teste.mp3';\nAudioHelper.play({src: som, volume: 1.0, autoplay: true, loop: false}, true);\n\n});","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"l8K6u6Y8LjrbYVF6"}
{"name":"Convert Compendium To Table","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"/* \n * Macro: GeekDad's Compendium to Table Script\n * Version: 1\n * Updated: 02-12-2020\n * Description: A nice friendly UI that takes a compendium and appends it to a table.\n*/\n\nfunction getPackNames() {\n let packs = [];\n let keys = game.packs.keys();\n let done = false;\n while (!done) {\n  let key = keys.next();\n  done = key.done;\n  if (!done) {\n   let pack = game.packs.get(key.value);\n   if (pack.metadata.entity === \"Item\") {\n    packs.push({ key: key.value, name: pack.metadata.label });\n   }\n  }\n }\n return packs;\n}\n\nfunction getTableNames() {\n let tables = [];\n game.tables.entities.forEach(table => {\n  tables.push({ key: table.id, name: table.name });\n });\n\n return tables;\n}\n\nasync function convertToTable(packKey, tableKey) {\n  let pack = game.packs.get(packKey);\n  let table = game.tables.get(tableKey);\n\n  const entityType = \"Compendium\";\n  await pack.getIndex();\n  let range = 0;\n  \n  const results = pack.index.map(i => {\n   range++;\n   return {\n    text: i.name,\n    type: 2,\n    collection: packKey,\n    resultId: i._id,\n    img: i.img,\n    weight: 1,\n    range: [range, range],\n    drawn: false\n   }\n  });\n\n  await table.createEmbeddedEntity(\"TableResult\", results);\n\n  await table.update({formula: \"1d\" + results.length});\n}\n\nlet itemPacks = getPackNames();\nlet tables = getTableNames();\n\nlet content = `<form><div style=\"display: inline-block; width: 100%; margin-bottom: 10px\">\n  <p>This script will append the selected compendium to the selected table.  If you want to a new table created, create it an empty table prior to running this script.</p>\n  <label for=\"output-targetPack\" style=\"vertical-align: top; margin-right: 10px;\">Select Pack:</label>\n  <br /><select name='output-targetPack' id='output-targetPack'>`\n\nitemPacks.forEach(item => {\n content += `<option value='${item.key}'>${item.name}</option>`;\n});\n\ncontent += `</select><br/><label for=\"output-tableKey\" style=\"vertical-align: top; margin-right: 10px;\">Table Name:</label><br /><select name=\"output-tableKey\" id=\"output-tableKey\">`\n\ntables.forEach(table => {\n content += `<option value='${table.key}'>${table.name}</option>`;\n});\n\ncontent += `</select></div><br /></form>`\n\n new Dialog({\n  title: `GeekDad's Compendium to Rolltable Converter`,\n  content: content,\n  buttons: {\n   yes: {\n    icon: \"<i class='fas fa-check'></i>\",\n    label: \"Convert\",\n    callback: (html) => {\n     let packKey = html.find(\"select[name='output-targetPack']\").val();\n     let tableKey = html.find(\"select[name='output-tableKey']\").val();\n     convertToTable(packKey, tableKey);\n    }\n   },\n   no: {\n    icon: \"<i class='fas fa-times'></i>\",\n    label: 'Cancel'\n   }\n  },\n  default: \"yes\"\n }).render(true);","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"core":{"sourceId":"Macro.r1vixJ7Om2Al2yYb"},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"oqBZYNMwb9IfozG5"}
{"name":"Deletar Todas Templates","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/flat-platform.svg","scope":"global","command":"/**\n * Deletes all templates on the current scene\n */\n \n// no dialog. Just delete all templates.\ncanvas.templates.deleteMany(canvas.templates.placeables.map(o =>o.id),{});\n\n// Get a dialog confirmation before deleting all templates on the scene:\n// canvas.templates.deleteAll()","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"ozgHegqTrS273OkC"}
{"name":"Mostrar Lista de Atributos","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/book.svg","scope":"global","command":"ShowActorAttributeData(actor);","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"pf0bMHRFTzqIkddP"}
{"name":"Boss Bar (Camera Pan)","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/magic/unholy/silhouette-evil-horned-giant.webp","scope":"global","command":"const bbtoken = canvas.tokens.controlled[0];\n\nif(!canvas.scene._bossBars || !canvas.scene._bossBars[bbtoken.id]){\n  if(game.user.isGM) {\n    BossBar.panCamera(bbtoken);\n    BossBar.create(bbtoken);\n  }\n}","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.ysnG5S2jR18S9QEF"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"r45LI3H7usS2a9vi"}
{"name":"Overhead Tile - Update Settings","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"/* change all of overhead tile fade for all tokens settings for all selected tiles */\nconst tiles = canvas.foreground.controlled;\nif(tiles.length === 0) return ui.notifications.error(\"You must have a tile selected to activate this macro.\");\n\nasync function tileUpdate(data) {\n    console.log(data);\n    for(let tile of tiles) {\n        await canvas.scene.updateEmbeddedDocuments('Tile', [{_id: tile.data._id, 'flags.overhead-tile-fade-for-all-tokens': data}]);\n    }\n}\n\nlet dialogEditor = new Dialog({\n    title: `Overhead Tile Fade For All Tokens - Update All Settings`,\n    content: `\n        <form>\n            <div class=\"form-group\">\n                <label>Mode:</label>\n                <select name=\"otffat-mode\">\n                    <option value=\"OFF\"}>Foundry Default</option>\n                    <option value=\"ALL\">All Tokens</option>\n                    <option value=\"BY_VISIBILITY\">By Token Visibility</option>\n                    <option value=\"BY_DISPOSITION\">By Token Disposition</option>\n                </select>\n            </div>\n            <div id=\"otffat_mode_settings_BY_DISPOSITION\" style=\"margin-top: 15px;\">\n                <p class=\"notes\">Settings for when the mode is By Token Disposition</p>\n                <div class=\"form-group fade-settings\" id=\"fade-for-type\">\n                    <label>Dispositions:</label>\n                    Friendly: <input type=\"checkbox\" name=\"otffat-friendly\" data-dtype=\"Boolean\"/>\n                    Neutral: <input type=\"checkbox\" name=\"otffat-neutral\" data-dtype=\"Boolean\" />\n                    Hostile: <input type=\"checkbox\" name=\"otffat-hostile\" data-dtype=\"Boolean\" />\n                </div>\n                <div class=\"form-group fade-settings\" id=\"fade-for-hidden\">\n                    <label>Fade for hidden tokens?</label>\n                    <input type=\"checkbox\" name=\"otffat-hidden\" data-dtype=\"Boolean\" />\n                </div>\n            </div>\n        </form>\n    `,\n    buttons: {\n        close: {\n            icon: \"<i class='fas fa-tick'></i>\",\n            label: `Close`\n        },\n        submit: {\n            label: 'Save',\n            callback: html => {\n                let form = html.find('form');\n                let mode = form.find('select[name=\"otffat-mode\"').val();\n                let friendly = form.find('input[name=\"otffat-friendly\"').is(':checked');\n                let neutral = form.find('input[name=\"otffat-neutral\"').is(':checked');\n                let hostile = form.find('input[name=\"otffat-hostile\"').is(':checked');\n                let hidden = form.find('input[name=\"otffat-hidden\"').is(':checked');\n\n                let data = { mode, friendly, neutral, hostile, hidden };\n                tileUpdate(data);\n            }\n        }\n    },\n    default: \"close\",\n    close: html => console.log(html)\n});\n\ndialogEditor.render(true);","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"core":{"sourceId":"Compendium.overhead-tile-fade-for-all-tokens.overhead-tile-fade-for-all-tokens-macros.7dLLlCymt0sySWz0"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"rSO2cLi6AiCs5nGx"}
{"name":"Deselect Token","type":"script","author":"fH9rQcKnNx31GdB2","img":"icons/convergence-target.svg","scope":"global","command":"game.user.updateTokenTargets()","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700"}},"_id":"vocYMiIULlFZ99eO"}
{"_id":"w56h8hREt0syzi5K","name":"#[CF_tempEntity]","type":"chat","author":"fH9rQcKnNx31GdB2","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"fH9rQcKnNx31GdB2":3},"flags":{"cf":{"id":"temp_yjixao1j7jt","path":"Mestre","color":"#fff700","name":"Mestre","children":[],"folderPath":[],"contents":[],"icon":"","fontColor":"#000000"}}}
